services:
  api:
    image: imewalid/dcf-backend:latest
    container_name: dcf-backend
    restart: always
    ports:
      - "80:80"
    depends_on:
      psql_database:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - APP_ENV=prod
    env_file:
      - .env
    networks:
      - app-network
    volumes:
      - ./swagger.yaml:/app/swagger.yaml

  psql_database:
    container_name: psql_database
    image: postgres:16.3
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-root}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-dcf_db}
    ports:
      - "5433:5432"
    volumes:
      - psqldb:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-root}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: dcf-redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-password}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

volumes:
  psqldb:
  redis_data:

networks:
  app-network:
    driver: bridge 